{
    "swagger": "2.0",
    "info": {
        "description": "API для сервиса медиа и рекламы",
        "title": "API Documentation",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/admin/ads": {
            "post": {
                "description": "Создает новое объявление на основе переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adv"
                ],
                "summary": "Добавить новое объявление",
                "parameters": [
                    {
                        "description": "Объявление",
                        "name": "adv",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Adv"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное создание объявления",
                        "schema": {
                            "$ref": "#/definitions/models.AdvResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт данных",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/ads/{id}": {
            "put": {
                "description": "Обновляет существующее объявление",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adv"
                ],
                "summary": "Обновить объявление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленное объявление",
                        "name": "adv",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdvUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление объявления",
                        "schema": {
                            "$ref": "#/definitions/models.AdvResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Объявление не найдено",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт данных",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет объявление по его id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adv"
                ],
                "summary": "Удалить объявление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление"
                    },
                    "404": {
                        "description": "Объявление не найдено",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/colors": {
            "post": {
                "description": "Создает новый цвет",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "colors"
                ],
                "summary": "Добавить новый цвет",
                "parameters": [
                    {
                        "description": "Цвет",
                        "name": "color",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Color"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное создание цвета",
                        "schema": {
                            "$ref": "#/definitions/models.ColorResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/colors/{id}": {
            "put": {
                "description": "Обновляет существующий цвет",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "colors"
                ],
                "summary": "Обновить цвет",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id цвета",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленный цвет",
                        "name": "color",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ColorUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление цвета",
                        "schema": {
                            "$ref": "#/definitions/models.ColorResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Цвет не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет цвет по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "colors"
                ],
                "summary": "Удалить цвет",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id цвета",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление"
                    },
                    "404": {
                        "description": "Цвет не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт данных",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/logos": {
            "post": {
                "description": "Создает новый логотип",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logos"
                ],
                "summary": "Добавить новый логотип",
                "parameters": [
                    {
                        "description": "Логотип",
                        "name": "logo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Logo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное создание логотипа",
                        "schema": {
                            "$ref": "#/definitions/models.LogoResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/logos/{id}": {
            "put": {
                "description": "Обновляет существующий логотип",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logos"
                ],
                "summary": "Обновить логотип",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id логотипа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленный логотип",
                        "name": "logo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LogoUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление логотипа",
                        "schema": {
                            "$ref": "#/definitions/models.LogoResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Логотип не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет логотип по его id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logos"
                ],
                "summary": "Удалить логотип",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id логотипа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление"
                    },
                    "404": {
                        "description": "Логотип не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт данных",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/tgs": {
            "get": {
                "description": "Возвращает список всех групп Telegram с учетом пагинации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tg"
                ],
                "summary": "Получить список групп Telegram",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп Telegram",
                        "schema": {
                            "$ref": "#/definitions/models.TGsResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Группы Telegram не найдены",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую группу Telegram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tg"
                ],
                "summary": "Добавить группу Telegram",
                "parameters": [
                    {
                        "description": "Группа Telegram",
                        "name": "tg",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TG"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное создание группы",
                        "schema": {
                            "$ref": "#/definitions/models.TGResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/admin/tgs/{id}": {
            "put": {
                "description": "Обновляет существующую группу Telegram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tg"
                ],
                "summary": "Обновить группу Telegram",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id группы Telegram",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленная группа Telegram",
                        "name": "tg",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TGUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление группы",
                        "schema": {
                            "$ref": "#/definitions/models.TGResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Группа Telegram не найдена",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет группу Telegram по ее id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tg"
                ],
                "summary": "Удалить группу Telegram",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "idгруппы Telegram",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление"
                    },
                    "404": {
                        "description": "Группа Telegram не найдена",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт данных",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/ads": {
            "get": {
                "description": "Возвращает список объявлений с возможностью фильтрации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adv"
                ],
                "summary": "Получить объявления с фильтрацией",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "post",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "priority",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список объявлений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AdvResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Объявления не найдены",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/colors": {
            "get": {
                "description": "Возвращает список всех цветов с учетом пагинации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "colors"
                ],
                "summary": "Получить список цветов",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список цветов",
                        "schema": {
                            "$ref": "#/definitions/models.ColorsResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Цвета не найдены",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/logos": {
            "get": {
                "description": "Возвращает список всех логотипов с учетом пагинации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logos"
                ],
                "summary": "Получить список логотипов",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список логотипов",
                        "schema": {
                            "$ref": "#/definitions/models.LogosResp"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Логотипы не найдены",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        },
        "/logos/{id}": {
            "get": {
                "description": "Возвращает логотип по его id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logos"
                ],
                "summary": "Получить логотип",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id логотипа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Логотип",
                        "schema": {
                            "$ref": "#/definitions/models.LogoResp"
                        }
                    },
                    "404": {
                        "description": "Логотип не найден",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httphandler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httphandler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Adv": {
            "type": "object",
            "required": [
                "color_id",
                "description",
                "logo_id",
                "post",
                "priority",
                "tg_id",
                "title"
            ],
            "properties": {
                "color_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "description": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 10
                },
                "id": {
                    "type": "integer"
                },
                "logo_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "post": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "priority": {
                    "type": "integer",
                    "maximum": 3,
                    "minimum": 1
                },
                "tg_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3
                }
            }
        },
        "models.AdvResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "hex": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo_url": {
                    "type": "string"
                },
                "post": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "tg_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.AdvUpdate": {
            "type": "object",
            "properties": {
                "color_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "description": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 10
                },
                "logo_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "post": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "priority": {
                    "type": "integer",
                    "maximum": 3,
                    "minimum": 1
                },
                "tg_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3
                }
            }
        },
        "models.Color": {
            "type": "object",
            "required": [
                "hex",
                "title"
            ],
            "properties": {
                "hex": {
                    "type": "string",
                    "maxLength": 7,
                    "minLength": 7
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.ColorResp": {
            "type": "object",
            "properties": {
                "hex": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ColorUpdate": {
            "type": "object",
            "properties": {
                "hex": {
                    "type": "string",
                    "maxLength": 7,
                    "minLength": 7
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.ColorsResp": {
            "type": "object",
            "properties": {
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ColorResp"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.Logo": {
            "type": "object",
            "required": [
                "title",
                "url"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "url": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "models.LogoResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.LogoUpdate": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "url": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "models.LogosResp": {
            "type": "object",
            "properties": {
                "logos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.Logo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.TG": {
            "type": "object",
            "required": [
                "title",
                "url"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "url": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "models.TGResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.TGUpdate": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "url": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "models.TGsResp": {
            "type": "object",
            "properties": {
                "tgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TGResp"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}